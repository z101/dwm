diff --git a/config.def.h b/config.def.h
index ec7e0fd..8f07a08 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,24 +1,31 @@
+#include <X11/XF86keysym.h>
+
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
+#define NUMCOLORS 3
+static const char colors[NUMCOLORS][MAXCOLORS][8] = {
+   // border   	foreground background
+   { "#202020", "#777777", "#202020" }, // normal
+   { "#202020", "#eeeeec", "#202020" }, // selected
+   { "#202020", "#3465a4", "#202020" }, // host
+//   { "#202020", "#fce94f", "#202020" }, // warning
+//   { "#cc0000", "#eeeeec", "#cc0000" }, // error
+//   { "#202020", "#bbbbbb", "#202020" }, // info
+//   { "#202020", "#4e9a06", "#202020" }, // ok
+};
 static const char *fonts[] = {
-	"monospace:size=10"
+	"terminus:lang=ru:pixelsize=12"
 };
-static const char dmenufont[]       = "monospace:size=10";
-static const char normbordercolor[] = "#444444";
-static const char normbgcolor[]     = "#222222";
-static const char normfgcolor[]     = "#bbbbbb";
-static const char selbordercolor[]  = "#005577";
-static const char selbgcolor[]      = "#005577";
-static const char selfgcolor[]      = "#eeeeee";
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const char dmenufont[]       = "terminus:lang=ru:pixelsize=12";
+static const unsigned int borderpx  = 0;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const int viewontag = 1; /* switch view on tag switch */
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "trm", "web", "3", "4", "5", "6", "7", "8", "9" };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -26,20 +33,21 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	{ "st-256color", "st-256color", NULL, 1, 0, -1 },
+	{ "surf", NULL, NULL, 1 << 1, 0, -1 },
+	{ "Iceweasel", "Navigator", NULL, 1 << 1, 0, -1 },
 };
 
 /* layout(s) */
 static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	{ "\u2560", tile },    /* first entry is default */
+	{ "~", NULL },    /* no layout function means floating behavior */
+	{ "|", monocle },
 };
 
 /* key definitions */
@@ -55,13 +63,15 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", colors[0][2], "-nf", colors[0][1], "-sb", colors[1][2], "-sf", colors[1][1], NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *browsercmd[] = { "surf", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY|ShiftMask, XK_b, spawn, {.v = browsercmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
