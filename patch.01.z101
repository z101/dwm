diff --git a/config.def.h b/config.def.h
index a2ac963..e7f9709 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,3 +1,5 @@
+#include <X11/XF86keysym.h>
+
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
@@ -5,47 +7,49 @@ static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
+static const char *fonts[]          = { "terminus:lang=ru:pixelsize=14" };
+static const char dmenufont[]       = "terminus:lang=ru:pixelsize=14";
+static const char col_gray1[]       = "#202020";
+static const char col_gray2[]       = "#202020";
 static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char col_gray4[]       = "#bbbbbb";
+static const char col_gray5[]       = "#202020";
+static const char col_cyan[]        = "#202020";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeSel]  = { col_gray4, col_gray5,  col_cyan  },
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "trm", "web", "3", "4", "5", "6", "7", "8", "9" };
 
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class            instance        title  tags mask  isfloating  monitor */
+	{ "st-256color",   "st-256color",   NULL,  1,         0,          -1 },
+	{ "Google-chrome", "google-chrome", NULL,  1 << 1,    0,          -1 },
+	{ "Surf",          "surf",          NULL,  1 << 1,    0,          -1 },
 };
 
 /* layout(s) */
 static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen window */
 
 static const Layout layouts[] = {
-	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	/* symbol   arrange function */
+	{ "\u2560", tile    }, /* first entry is default */
+	{ "~",      NULL    }, /* no layout function means floating behavior */
+	{ "|",      monocle },
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -59,11 +63,25 @@ static const Layout layouts[] = {
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *lockcmd[]  = { "slock", NULL };
+static const char *brwscmd[]  = { "surf", NULL };
+static const char *goglcmd[]  = { "google-chrome", NULL };
+static const char *brtup[]    = { "/usr/bin/xbacklight", "-inc", "5", NULL };
+static const char *brtdown[]  = { "/usr/bin/xbacklight", "-dec", "5", NULL };
+static const char *volup[]    = { "/usr/bin/amixer", "sset", "Master", "5%+", NULL };
+static const char *voldown[]  = { "/usr/bin/amixer", "sset", "Master", "5%-", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY|ShiftMask,             XK_b,      spawn,          {.v = brwscmd } },
+	{ MODKEY|ShiftMask,             XK_g,      spawn,          {.v = goglcmd } },
+	{ MODKEY|ShiftMask,             XK_l,      spawn,          {.v = lockcmd } },
+	{ 0,             XF86XK_MonBrightnessUp,   spawn,          {.v = brtup } },
+	{ 0,             XF86XK_MonBrightnessDown, spawn,          {.v = brtdown } },
+	{ 0,             XF86XK_AudioRaiseVolume,  spawn,          {.v = volup } },
+	{ 0,             XF86XK_AudioLowerVolume,  spawn,          {.v = voldown } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
